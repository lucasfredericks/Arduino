/**
* This file is autogenerated by nRFgo Studio 1.19.0.7
*/

#include "services.h"
#include "lib_aci.h"

static bool is_gap_device_name_set_requested = false;
static bool is_battery_battery_level_send_requested = false;
static bool is_battery_battery_level_set_requested = false;
static bool is_primo_response_send_requested = false;
static bool is_primo_io_send_requested = false;
static bool is_primo_uid_send_requested = false;
static bool is_primo_uid_set_requested = false;

static void *gap_device_name_set;
static uint8_t gap_device_name_set_size;
static uint8_t battery_battery_level_tx;
static uint8_t battery_battery_level_set;
static void *primo_response_tx;
static uint8_t primo_response_tx_size;
static void *primo_io_tx;
static uint8_t primo_io_tx_size;
static void *primo_uid_tx;
static uint8_t primo_uid_tx_size;
static void *primo_uid_set;
static uint8_t primo_uid_set_size;
extern aci_state_t aci_state;

static bool gap_device_name_update_set(void)
{
  return(lib_aci_set_local_data(&aci_state,PIPE_GAP_DEVICE_NAME_SET, (uint8_t*)gap_device_name_set, gap_device_name_set_size));
}

void services_set_gap_device_name(void *src, int size)
{
  gap_device_name_set_size = size;
  gap_device_name_set = src;
  is_gap_device_name_set_requested = true;
  services_update_pipes();
}
static bool battery_battery_level_update_send(void)
{
  if (lib_aci_is_pipe_available(&aci_state,PIPE_BATTERY_BATTERY_LEVEL_TX))
  {
    return(lib_aci_send_data(PIPE_BATTERY_BATTERY_LEVEL_TX, (uint8_t*)&battery_battery_level_tx, 1));
  }
  return(false);
}

bool services_send_battery_battery_level(uint8_t src, bool is_freshest_sample)
{
  if (false == is_freshest_sample)
  {
    if (true == is_battery_battery_level_send_requested)
    {
      services_update_pipes();
    }
    if (false == is_battery_battery_level_send_requested)
    {
      battery_battery_level_tx = src;
      is_battery_battery_level_send_requested = true;
      services_update_pipes();
      return(true);
    }
    return(false);
  }
  else
  {
    battery_battery_level_tx = src;
    is_battery_battery_level_send_requested = true;
    services_update_pipes();
    return(true);
  }
}
static bool battery_battery_level_update_set(void)
{
  return(lib_aci_set_local_data(&aci_state,PIPE_BATTERY_BATTERY_LEVEL_SET, (uint8_t*)&battery_battery_level_set, 1));
}

void services_set_battery_battery_level(uint8_t src)
{
  battery_battery_level_set = src;
  is_battery_battery_level_set_requested = true;
  services_update_pipes();
}
static bool primo_response_update_send(void)
{
  if (lib_aci_is_pipe_available(&aci_state,PIPE_PRIMO_RESPONSE_TX))
  {
    return(lib_aci_send_data(PIPE_PRIMO_RESPONSE_TX, (uint8_t*)primo_response_tx, primo_response_tx_size));
  }
  return(false);
}

bool services_send_primo_response(void *src, int size, bool is_freshest_sample)
{
  if (false == is_freshest_sample)
  {
    if (true == is_primo_response_send_requested)
    {
      services_update_pipes();
    }
    if (false == is_primo_response_send_requested)
    {
      primo_response_tx_size = size;
      primo_response_tx = src;
      is_primo_response_send_requested = true;
      services_update_pipes();
      return(true);
    }
    return(false);
  }
  else
  {
    primo_response_tx_size = size;
    primo_response_tx = src;
    is_primo_response_send_requested = true;
    services_update_pipes();
    return(true);
  }
}
static bool primo_io_update_send(void)
{
  if (lib_aci_is_pipe_available(&aci_state,PIPE_PRIMO_IO_TX))
  {
    return(lib_aci_send_data(PIPE_PRIMO_IO_TX, (uint8_t*)primo_io_tx, primo_io_tx_size));
  }
  return(false);
}

bool services_send_primo_io(void *src, int size, bool is_freshest_sample)
{
  if (false == is_freshest_sample)
  {
    if (true == is_primo_io_send_requested)
    {
      services_update_pipes();
    }
    if (false == is_primo_io_send_requested)
    {
      primo_io_tx_size = size;
      primo_io_tx = src;
      is_primo_io_send_requested = true;
      services_update_pipes();
      return(true);
    }
    return(false);
  }
  else
  {
    primo_io_tx_size = size;
    primo_io_tx = src;
    is_primo_io_send_requested = true;
    services_update_pipes();
    return(true);
  }
}
static bool primo_uid_update_send(void)
{
  if (lib_aci_is_pipe_available(&aci_state, PIPE_PRIMO_UID_TX))
  {
    return(lib_aci_send_data(PIPE_PRIMO_UID_TX, (uint8_t*)primo_uid_tx, primo_uid_tx_size));
  }
  return(false);
}

bool services_send_primo_uid(void *src, int size, bool is_freshest_sample)
{
  if (false == is_freshest_sample)
  {
    if (true == is_primo_uid_send_requested)
    {
      services_update_pipes();
    }
    if (false == is_primo_uid_send_requested)
    {
      primo_uid_tx_size = size;
      primo_uid_tx = src;
      is_primo_uid_send_requested = true;
      services_update_pipes();
      return(true);
    }
    return(false);
  }
  else
  {
    primo_uid_tx_size = size;
    primo_uid_tx = src;
    is_primo_uid_send_requested = true;
    services_update_pipes();
    return(true);
  }
}
static bool primo_uid_update_set(void)
{
  return(lib_aci_set_local_data(&aci_state, PIPE_PRIMO_UID_SET, (uint8_t*)primo_uid_set, primo_uid_set_size));
}

void services_set_primo_uid(void *src, int size)
{
  primo_uid_set_size = size;
  primo_uid_set = src;
  is_primo_uid_set_requested = true;
  services_update_pipes();
}

void services_update_pipes(void)
{
  if(is_gap_device_name_set_requested)
  {
    is_gap_device_name_set_requested = !(gap_device_name_update_set());
  }
  if(is_battery_battery_level_send_requested)
  {
    is_battery_battery_level_send_requested = !(battery_battery_level_update_send());
  }
  if(is_battery_battery_level_set_requested)
  {
    is_battery_battery_level_set_requested = !(battery_battery_level_update_set());
  }
  if(is_primo_response_send_requested)
  {
    is_primo_response_send_requested = !(primo_response_update_send());
  }
  if(is_primo_io_send_requested)
  {
    is_primo_io_send_requested = !(primo_io_update_send());
  }
  if(is_primo_uid_send_requested)
  {
    is_primo_uid_send_requested = !(primo_uid_update_send());
  }
  if(is_primo_uid_set_requested)
  {
    is_primo_uid_set_requested = !(primo_uid_update_set());
  }
}

